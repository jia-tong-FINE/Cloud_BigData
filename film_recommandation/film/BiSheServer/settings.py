"""
Django settings for BiSheServer project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import mimetypes
from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
import configparser

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# 加载外部配置信息
TEST_CONF_DIR = os.path.join(BASE_DIR, "config/conf.ini")
# CONFIG = configparser.ConfigParser()
CONFIG = configparser.RawConfigParser()
CONFIG.read(TEST_CONF_DIR, encoding='utf-8')
default = CONFIG.defaults()
# CONFIG.get('cmd', 'startserver')

# 其余配置变量
FONT_PATH = 'file/汉仪中楷简.ttf'  # 设置字体样式，支持TTF等文件格式

# 告知Django认证系统使用我们自定义的模型类
# AUTH_USER_MODEL = 'user.UsersBase'
# AUTH 方法（支持邮箱登录） 自定义认证系统
# AUTHENTICATION_BACKENDS = ('user.views.CustomBackend',)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'tej=6wda3t#ct&ncym!*d&d&mq-*)-1ztxz%zp(%_ewbg%4cke'

INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'BiShe.apps.BisheConfig',
    'movie',
    'user',
    'api',
    'TestServer',
    'rest_framework',
    'django_apscheduler',  # 定时执行任务
    # 'django_crontab',  # 定时任务，只能在Linux下使用
    # 开发时使用
    # 'django_extensions',
    # 'debug_toolbar',
]

MIDDLEWARE = []

# SECURITY WARNING: don't run with debug turned on in production!

ALLOWED_HOSTS = ['*']

if default["debug"] == 'False':
    DEBUG = False
    STATIC_ROOT = os.path.join(BASE_DIR, default["static_home"])
else:
    DEBUG = True
    INTERNAL_IPS = [
        '127.0.0.1',
        'localhost'
    ]
    INSTALLED_APPS.append('django_extensions')
    INSTALLED_APPS.append('debug_toolbar')

    MIDDLEWARE.append("debug_toolbar.middleware.DebugToolbarMiddleware")

    DEBUG_TOOLBAR_PANELS = [
        'debug_toolbar.panels.timer.TimerPanel',
        'debug_toolbar.panels.headers.HeadersPanel',
        'debug_toolbar.panels.request.RequestPanel',
        'debug_toolbar.panels.sql.SQLPanel',
        'debug_toolbar.panels.cache.CachePanel',
        'debug_toolbar.panels.logging.LoggingPanel',
    ]

    DEBUG_TOOLBAR_CONFIG = {
        'JQUERY_URL': 'https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js',
        'SHOW_COLLAPSED': True,
        'SHOW_TOOLBAR_CALLBACK': lambda x: True,
    }
    STATICFILES_DIRS = (
        os.path.join(os.path.dirname(__file__), "../" + default["static_home"]).replace('\\', '/'),
    )

MIDDLEWARE = MIDDLEWARE + [
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'request_logging.middleware.LoggingMiddleware',
    'api.middleware_log.ApiLoggingMiddleware',
]

# ALLOWED_HOSTS = default["allowed_hosts"]


# ALLOWED_HOSTS = [
#     '127.0.0.1',
#     'localhost'
# ]

ROOT_URLCONF = 'BiSheServer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, default["templates_home"])],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries': {
                    'set_var': 'api.set_var',
            }
        },
    },
]

WSGI_APPLICATION = 'BiSheServer.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
# 默认数据库配置
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# REDIS_URI = "redis://:%s@%s:%s/%s" % (CONFIG.get('REDIS', 'REDIS_PASSWORD'), CONFIG.get('REDIS', 'REDIS_HOST'),
# CONFIG.get('REDIS', 'REDIS_PORT'), CONFIG.get('REDIS', 'REDIS_DB'))
# CACHES = {
#     'default': {
#         'BACKEND': 'django_redis.cache.RedisCache',
#         'LOCATION': REDIS_URI,
#         'TIMEOUT': 86400,  # 1 day,0缓存将失效,None永不过期
#         'OPTIONS': {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#            'MAX_ENTRIES': 1000,
#            #'CULL_FREQUENCY': 3,
#         },
#         "KEY_PREFIX":""  #缓存key的前缀（默认空）
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': CONFIG.get('DATEBASE', 'DATABASES_ENGINE'),    # 数据库引擎
        'NAME': CONFIG.get('DATEBASE', 'DATABASES_NAME'),  # 数据库名称
        'HOST': CONFIG.get('DATEBASE', 'DATABASES_HOST'),  # 数据库地址，本机 ip 地址 127.0.0.1
        'PORT': CONFIG.get('DATEBASE', 'DATABASES_PORT'),  # 端口
        'USER': CONFIG.get('DATEBASE', 'DATABASES_USER'),  # 数据库用户名
        'PASSWORD': CONFIG.get('DATEBASE', 'DATABASES_PASSWORD'),  # 数据库密码
        'OPTIONS': {
            'init_command': 'SET sql_mode="STRICT_TRANS_TABLES"',
            'charset': 'utf8mb4'
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

# LANGUAGE_CODE = 'en-us'
#
# TIME_ZONE = 'UTC'
LANGUAGE_CODE = 'zh-hans'
# 时区
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True
# 如果不设置为false, 则在数据库添加时间的时候是UTC时间
USE_TZ = False
# USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# 静态目录配置
STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, "static")
# STATIC_ROOT = os.path.join(BASE_DIR,"/static/")
# STATIC_ROOT = os.path.join(BASE_DIR, default["static_home"])
# STATIC_ROOT = os.path.join(BASE_DIR, "/"+default["static_home"]+"/")
# STATICFILES_DIRS = (
#     # os.path.join(BASE_DIR, 'static'),
#     # os.path.join(BASE_DIR, "/" + default["static_home"] + "/"),
#     os.path.join(os.path.dirname(__file__), "../"+default["static_home"]).replace('\\', '/'),
# )


# MEDIA_URL = "/file/"
# MEDIA_ROOT = os.path.join(BASE_DIR, "file")


# SESSION配置
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # 引擎（默认）
SESSION_COOKIE_NAME = "sessionid"  # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）
SESSION_COOKIE_PATH = "/"  # Session的cookie保存的路径（默认）
SESSION_COOKIE_DOMAIN = None  # Session的cookie保存的域名（默认）
SESSION_COOKIE_SECURE = False  # 是否Https传输cookie（默认）
SESSION_COOKIE_HTTPONLY = True  # 是否Session的cookie只支持http传输（默认）
SESSION_COOKIE_AGE = 1209600  # Session的cookie失效日期（2周）（默认）
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # 是否关闭浏览器使得Session过期（默认False）
SESSION_SAVE_EVERY_REQUEST = False  # 是否每次请求都保存Session，默认修改之后才保存（默认）


# 相关日志配置
BASE_LOG_DIR = os.path.join(BASE_DIR, default["log_home"])

# # 设置定时执行计划任务
# CRONJOBS = [
#     # 每天凌晨1点执行日志上传任务
#     # ('0 1 * * *', 'api.upload_log.Transfer.upload_hadoop_log', '>> ' +
#     #  os.path.join(BASE_LOG_DIR, 'upload_hadoop_crontab.log')),
#     # 每天凌晨1点执行日志上传任务
#     ('*/2 * * * *', 'api.upload_log.Transfer().upload_hadoop_log', '>> ' +
#      os.path.join(BASE_LOG_DIR, 'upload_hadoop_crontab.log'))
# ]
# # 设置中文支持
# CRONTAB_COMMAND_PREFIX = 'LANG_ALL=zh_cn.UTF-8'

LOG_SUFFIX = CONFIG.get('HADOOP_LOG', 'LOG_SUFFIX')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format': '%(asctime)s FuncName:%(funcName)s LINE:%(lineno)d [%(levelname)s]- %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(funcName)s %(message)s'
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
        'default': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_LOG_DIR, 'mysite_info.log'),
            'maxBytes': 1024*1024*50,   # 50 MB
            'backupCount': 2,
            'formatter': 'standard',
            "encoding": "utf8"
        },
        'default_debug': {
            'level': 'DEBUG',
            'class': 'api.MidnightRotatingFileHandler.MultiProcessSafeDailyRotatingFileHandler',
            'filename': os.path.join(BASE_LOG_DIR, 'mysite_debug'),
            # 'maxBytes': 1024*1024*50,  # 50 MB
            # 'backupCount': 2,
            'utc': False,
            'suffix': LOG_SUFFIX,
            # 'when': 'M',  # 每天一切， 可选值有S/秒 M/分 H/小时 D/天 W0-W6/周(0=周一) midnight/如果没指定时间就默认在午夜
            'formatter': 'standard',
            "encoding": "utf8"
        },
        'request_handler': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_LOG_DIR, 'mysite_common.log'),
            'maxBytes': 1024*1024*50,  # 50 MB
            'backupCount': 2,
            'formatter': 'standard',
            "encoding": "utf8"
        },
        'restful_api': {
            'level': 'DEBUG',
            # 'class': 'logging.handlers.TimedRotatingFileHandler',
            'class': 'api.MidnightRotatingFileHandler.MultiProcessSafeDailyRotatingFileHandler',
            'filename': os.path.join(BASE_LOG_DIR, 'mysite_api'),
            # 'maxBytes': 1024*1024*50,  # 50 MB
            'utc': False,
            'suffix': LOG_SUFFIX,
            # 'when': 'S',  # 每天一切， 可选值有S/秒 M/分 H/小时 D/天 W0-W6/周(0=周一) midnight/如果没指定时间就默认在午夜
            'formatter': 'verbose',
            "encoding": "utf8"
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'default_debug'],
            'level': 'INFO',
            'propagate': False
        },
        'django.request': {
            'handlers': ['request_handler'],
            'level': 'INFO',
            'propagate': False
        },
        'common': {
            'handlers': ['default', 'console'],
            'level': 'INFO',
            'propagate': True
        },
        'api': {
            'handlers': ['restful_api'],
            'level': 'INFO',
            'propagate': True
        },
    }
}

if default["use_log"] == 'False':
    # print("不使用日志配置")
    LOGGING = ""

CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
# CORS_ORIGIN_WHITELIST = (
# 	'*'
# )
CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
)
